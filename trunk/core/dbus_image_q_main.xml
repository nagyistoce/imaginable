<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
	"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<!-- *********
**
** Project:      Imaginable
** File info:    $Id$
** Author:       Copyright (C) 2009,2010 Kuzma Shapran <Kuzma.Shapran@gmail.com>
** License:      GPLv3
**
**  This file is part of Imaginable.
**
**  Imaginable is free software: you can redistribute it and/or modify
**  it under the terms of the GNU General Public License as published by
**  the Free Software Foundation, either version 3 of the License, or
**  (at your option) any later version.
**
**  Imaginable is distributed in the hope that it will be useful,
**  but WITHOUT ANY WARRANTY; without even the implied warranty of
**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**  GNU General Public License for more details.
**
**  You should have received a copy of the GNU General Public License
**  along with Imaginable.  If not, see <http://www.gnu.org/licenses/>.
**
********** -->
<node name="/name/kuzmashapran/imaginable">
	<interface name="name.kuzmashapran.imaginable.image_main">

		<property name="size" type="(ii)" access="readwrite">
			<annotation name="com.trolltech.QtDBus.QtTypeName" value="QSize"/>
		</property>

		<!--method name="size"><arg type="(ii)" direction="out"/>
			<annotation name="com.trolltech.QtDBus.QtTypeName.Out0" value="QSize"/>
		</method>

		<method name="setSize">
			<arg type="(ii)" name="value" direction="in"/>
			<annotation name="com.trolltech.QtDBus.QtTypeName.In0" value="QSize"/>
		</method-->

		<property name="width" type="i" access="readwrite"/>

		<!--method name="width"><arg type="i" direction="out"/></method>

		<method name="setWidth">
			<arg type="i" name="value" direction="in"/>
		</method-->

		<property name="height" type="i" access="readwrite"/>

		<!--method name="height"><arg type="i" direction="out"/></method>

		<method name="setHeight">
			<arg type="i" name="value" direction="in"/>
		</method-->

		<method name="area"><arg type="i" direction="out"/></method>


		<property name="offset" type="(ii)" access="readwrite">
			<annotation name="com.trolltech.QtDBus.QtTypeName" value="QPoint"/>
		</property>

		<!--method name="offset"><arg type="(ii)" direction="out"/>
			<annotation name="com.trolltech.QtDBus.QtTypeName.Out0" value="QPoint"/>
		</method>

		<method name="setOffset">
			<arg type="(ii)" name="value" direction="in"/>
			<annotation name="com.trolltech.QtDBus.QtTypeName.In0" value="QPoint"/>
		</method-->


		<method name="isEmpty"><arg type="b" direction="out"/></method>
		<method name="hasData"><arg type="b" direction="out"/></method>

		<method name="clear" />

		<method name="colourSpaceToString"><arg type="s" direction="out"/>
			<arg type="u" name="colourSpace" direction="in"/>
		</method>

		<method name="colourSpace"><arg type="u" direction="out"/></method>

		<method name="colourPlaneToString"><arg type="s" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="planesList"><arg type="ai" direction="out"/>
			<annotation name="com.trolltech.QtDBus.QtTypeName.Out0" value="QintList"/>
		</method>

		<method name="hasPlane"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="hasAlpha"><arg type="b" direction="out"/></method>

		<method name="planesCount"><arg type="u" direction="out"/></method>

		<method name="addPlane"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="removePlane"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="movePlane"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlaneFrom" direction="in"/>
			<arg type="i" name="colourPlaneTo"   direction="in"/>
		</method>

		<method name="planeHasName"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="planeName"><arg type="s" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="setPlaneName"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
			<arg type="s" name="name"        direction="in"/>
		</method>

		<method name="erasePlaneName"><arg type="b" direction="out"/>
			<arg type="i" name="colourPlane" direction="in"/>
		</method>

		<method name="hasText"><arg type="b" direction="out"/>
			<arg type="s" name="key" direction="in"/>
		</method>

		<method name="text"><arg type="s" direction="out"/>
			<arg type="s" name="key" direction="in"/>
		</method>

		<method name="textKeysList"><arg type="as" direction="out"/>
			<annotation name="com.trolltech.QtDBus.QtTypeName.Out0" value="QStringList"/>
		</method>

		<method name="setText"><arg type="b" direction="out"/>
			<arg type="s" name="key"   direction="in"/>
			<arg type="s" name="value" direction="in"/>
		</method>

		<method name="eraseText"><arg type="b" direction="out"/>
			<arg type="s" name="key" direction="in"/>
		</method>

		<method name="clearTexts" />

	</interface>
</node>
