/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a dbus_a_image_q -i image_q.hpp -c DBus_Adaptor_Image_Q -l Image_Q dbus_a_image_q.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DBUS_A_IMAGE_Q_H_1269078177
#define DBUS_A_IMAGE_Q_H_1269078177

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "image_q.hpp"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface name.kuzmashapran.imaginable.image
 */
class DBus_Adaptor_Image_Q: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "name.kuzmashapran.imaginable.image")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"name.kuzmashapran.imaginable.image\">\n"
"    <method name=\"width\">\n"
"      <arg direction=\"out\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"setWidth\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"width\"/>\n"
"    </method>\n"
"    <method name=\"height\">\n"
"      <arg direction=\"out\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"setHeight\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"heigth\"/>\n"
"    </method>\n"
"    <method name=\"square\">\n"
"      <arg direction=\"out\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"setSize\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"width\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"heigth\"/>\n"
"    </method>\n"
"    <property access=\"readwrite\" type=\"q\" name=\"maximum\"/>\n"
"    <method name=\"empty\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"hasData\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"clear\"/>\n"
"    <method name=\"colourSpaceToString\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"colourSpace\"/>\n"
"    </method>\n"
"    <method name=\"colourSpace\">\n"
"      <arg direction=\"out\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"colourPlaneToString\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"planes\">\n"
"      <arg direction=\"out\" type=\"ai\"/>\n"
"      <annotation value=\"QintList\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"hasPlane\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"hasAlpha\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"planesCount\">\n"
"      <arg direction=\"out\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"addPlane\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"removePlane\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"movePlane\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlaneFrom\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlaneTo\"/>\n"
"    </method>\n"
"    <method name=\"planeHasName\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"planeName\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"setPlaneName\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\"/>\n"
"    </method>\n"
"    <method name=\"erasePlaneName\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"colourPlane\"/>\n"
"    </method>\n"
"    <method name=\"hasText\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"key\"/>\n"
"    </method>\n"
"    <method name=\"text\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"key\"/>\n"
"    </method>\n"
"    <method name=\"textKeys\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"      <annotation value=\"QStringList\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"setText\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"key\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"eraseText\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"key\"/>\n"
"    </method>\n"
"    <method name=\"clearTexts\"/>\n"
"  </interface>\n"
        "")
public:
    DBus_Adaptor_Image_Q(Image_Q *parent);
    virtual ~DBus_Adaptor_Image_Q();

    inline Image_Q *parent() const
    { return static_cast<Image_Q *>(QObject::parent()); }

public: // PROPERTIES
    Q_PROPERTY(ushort maximum READ maximum WRITE setMaximum)
    ushort maximum() const;
    void setMaximum(ushort value);

public Q_SLOTS: // METHODS
    bool addPlane(int colourPlane);
    void clear();
    void clearTexts();
    QString colourPlaneToString(int colourPlane);
    uint colourSpace();
    QString colourSpaceToString(uint colourSpace);
    bool empty();
    bool erasePlaneName(int colourPlane);
    bool eraseText(const QString &key);
    bool hasAlpha();
    bool hasData();
    bool hasPlane(int colourPlane);
    bool hasText(const QString &key);
    uint height();
    bool movePlane(int colourPlaneFrom, int colourPlaneTo);
    bool planeHasName(int colourPlane);
    QString planeName(int colourPlane);
    QintList planes();
    uint planesCount();
    bool removePlane(int colourPlane);
    bool setHeight(uint heigth);
    bool setPlaneName(int colourPlane, const QString &name);
    bool setSize(uint width, uint heigth);
    bool setText(const QString &key, const QString &value);
    bool setWidth(uint width);
    uint square();
    QString text(const QString &key);
    QStringList textKeys();
    uint width();
Q_SIGNALS: // SIGNALS
};

#endif
